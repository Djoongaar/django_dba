# Generated by Django 4.1.2 on 2022-10-21 08:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LastStatDatabase',
            fields=[
                ('datid', models.IntegerField(primary_key=True, serialize=False)),
                ('datname', models.CharField(max_length=16)),
                ('xact_commit', models.BigIntegerField(null=True)),
                ('xact_rollback', models.BigIntegerField(null=True)),
                ('blks_read', models.BigIntegerField(null=True)),
                ('blks_hit', models.BigIntegerField(null=True)),
                ('tup_returned', models.BigIntegerField(null=True)),
                ('tup_fetched', models.BigIntegerField(null=True)),
                ('tup_inserted', models.BigIntegerField(null=True)),
                ('tup_updated', models.BigIntegerField(null=True)),
                ('tup_deleted', models.BigIntegerField(null=True)),
                ('conflicts', models.BigIntegerField(null=True)),
                ('temp_files', models.BigIntegerField(null=True)),
                ('temp_bytes', models.BigIntegerField(null=True)),
                ('deadlocks', models.BigIntegerField(null=True)),
                ('blk_read_time', models.FloatField(null=True)),
                ('blk_write_time', models.FloatField(null=True)),
                ('stats_reset', models.DateTimeField(null=True)),
                ('datsize', models.BigIntegerField(null=True)),
                ('datsize_delta', models.BigIntegerField(null=True)),
                ('datistemplate', models.BigIntegerField(null=True)),
                ('session_time', models.FloatField(null=True)),
                ('active_time', models.FloatField(null=True)),
                ('idle_in_transaction_time', models.FloatField(null=True)),
                ('sessions', models.BigIntegerField(null=True)),
                ('sessions_abandoned', models.BigIntegerField(null=True)),
                ('sessions_fatal', models.BigIntegerField(null=True)),
                ('sessions_killed', models.BigIntegerField(null=True)),
                ('checksum_failures', models.BigIntegerField(null=True)),
                ('checksum_last_failure', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'last_stat_database',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('server_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('topn', models.PositiveSmallIntegerField(default=20)),
                ('max_sample_age', models.PositiveIntegerField(default=7, verbose_name='')),
                ('track_sample_timings', models.BooleanField(default=False)),
                ('max_query_length', models.PositiveIntegerField(default=20000)),
                ('frequency', models.PositiveIntegerField(default=1800)),
                ('last_sample_id', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'servers',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('sample_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbadmin.server')),
            ],
            options={
                'db_table': 'samples',
                'unique_together': {('sample_id', 'server')},
            },
        ),
        migrations.CreateModel(
            name='StatDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datid', models.IntegerField()),
                ('datname', models.CharField(max_length=16)),
                ('xact_commit', models.BigIntegerField(null=True)),
                ('xact_rollback', models.BigIntegerField(null=True)),
                ('blks_read', models.BigIntegerField(null=True)),
                ('blks_hit', models.BigIntegerField(null=True)),
                ('tup_returned', models.BigIntegerField(null=True)),
                ('tup_fetched', models.BigIntegerField(null=True)),
                ('tup_inserted', models.BigIntegerField(null=True)),
                ('tup_updated', models.BigIntegerField(null=True)),
                ('tup_deleted', models.BigIntegerField(null=True)),
                ('conflicts', models.BigIntegerField(null=True)),
                ('temp_files', models.BigIntegerField(null=True)),
                ('temp_bytes', models.BigIntegerField(null=True)),
                ('deadlocks', models.BigIntegerField(null=True)),
                ('blk_read_time', models.FloatField(null=True)),
                ('blk_write_time', models.FloatField(null=True)),
                ('stats_reset', models.DateTimeField(null=True)),
                ('datsize', models.BigIntegerField(null=True)),
                ('datsize_delta', models.BigIntegerField(null=True)),
                ('datistemplate', models.BigIntegerField(null=True)),
                ('session_time', models.FloatField(null=True)),
                ('active_time', models.FloatField(null=True)),
                ('idle_in_transaction_time', models.FloatField(null=True)),
                ('sessions', models.BigIntegerField(null=True)),
                ('sessions_abandoned', models.BigIntegerField(null=True)),
                ('sessions_fatal', models.BigIntegerField(null=True)),
                ('sessions_killed', models.BigIntegerField(null=True)),
                ('checksum_failures', models.BigIntegerField(null=True)),
                ('checksum_last_failure', models.DateTimeField(null=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbadmin.sample')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbadmin.server')),
            ],
            options={
                'db_table': 'sample_stat_database',
                'unique_together': {('server', 'sample', 'datid')},
            },
        ),
        migrations.RunSQL(
            """
            CREATE MATERIALIZED VIEW last_stat_database AS (
                SELECT
                    dbs.datid,
                    dbs.datname,
                    dbs.xact_commit,
                    dbs.xact_rollback,
                    dbs.blks_read,
                    dbs.blks_hit,
                    dbs.tup_returned,
                    dbs.tup_fetched,
                    dbs.tup_inserted,
                    dbs.tup_updated,
                    dbs.tup_deleted,
                    dbs.conflicts,
                    dbs.temp_files,
                    dbs.temp_bytes,
                    dbs.deadlocks,
                    CASE WHEN (SELECT setting::bigint < 12000 FROM pg_catalog.pg_settings WHERE name = 'server_version_num')
                        THEN NULL
                        ELSE dbs.checksum_failures
                    END AS checksum_failures,
                    CASE WHEN (SELECT setting::bigint < 12000 FROM pg_catalog.pg_settings WHERE name = 'server_version_num')
                        THEN NULL
                        ELSE dbs.checksum_last_failure
                    END AS checksum_last_failure,
                    dbs.blk_read_time,
                    dbs.blk_write_time,
                    NULL AS session_time,
                    NULL AS active_time,
                    NULL AS idle_in_transaction_time,
                    NULL AS sessions,
                    NULL AS sessions_abandoned,
                    NULL AS sessions_fatal,
                    NULL AS sessions_killed,
                    dbs.stats_reset,
                    pg_database_size(dbs.datid) AS datsize,
                    0 AS datsize_delta,
                    db.datistemplate 
                FROM pg_catalog.pg_stat_database dbs
                JOIN pg_catalog.pg_database db ON (dbs.datid = db.oid)
                WHERE dbs.datname IS NOT NULL
            )
            """,
            "DROP MATERIALIZED VIEW last_stat_database;"
        ),
    ]
